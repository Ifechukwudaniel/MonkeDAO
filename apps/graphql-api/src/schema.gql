# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Comment {
  author: User!
  body: String!
  createdAt: DateTime!
  id: ID!
  rating: Int!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Deal {
  active: Boolean!
  category: String
  createdAt: DateTime!
  currency: String
  description: String
  discountPercent: Float
  discountedPrice: Float
  endDate: DateTime
  externalId: String
  externalUrl: String
  featured: Boolean!
  id: ID!
  imageUrl: String
  originalPrice: Float
  slug: String!
  source: String!
  startDate: DateTime
  subCategory: String
  title: String!
  updatedAt: DateTime!
}

"""Login input using a Solana signature and public key"""
input LoginInput {
  """User signature (base58/base64 encoded string)"""
  signature: String!

  """User’s public key (base58 encoded Solana wallet address)"""
  walletAddress: String!
}

type Merchant {
  city: String
  country: String
  createdAt: DateTime!
  description: String
  externalId: String
  id: ID!
  logoUrl: String
  name: String!
  slug: String!
  updatedAt: DateTime!
  verifiedMerchant: Boolean!
  walletAddress: String
  website: String
}

type Mutation {
  """Sign in"""
  login(input: LoginInput!): User!

  """Sign up"""
  signup(input: SignUpInput!): User!

  """Update current user"""
  updateUser(input: UpdateUserInput!): User!
}

type Query {
  """Get current user (from token)"""
  currentUser: User!

  """Get Deal by Id"""
  getDeal(id: Float!): Deal!

  """Get all comments for a deal by deal ID"""
  getDealComments(dealId: Float!): [Comment!]!

  """Get all deals under a specific category"""
  getDealsByCategory(category: String!): [Deal!]!

  """Get merchant by ID"""
  getMerchant(id: Float!): Merchant!

  """Get all comments for a merchant by merchant ID"""
  getMerchantComments(merchantId: Float!): [Comment!]!
  hello: String!
  tags: [String!]!
}

"""Sign up input using a Solana wallet signature and public key"""
input SignUpInput {
  """Optional email address"""
  email: String

  """Optional name"""
  name: String

  """User signature (base58/base64 encoded string)"""
  signature: String!

  """User’s username"""
  username: String!

  """User’s public key (base58 encoded Solana wallet address)"""
  walletAddress: String!
}

"""User update request"""
input UpdateUserInput {
  bio: String
  email: String
  image: String
  username: String
}

type User {
  bio: String
  email: String
  id: Float
  image: String
  token: String
  username: String
  walletAddress: String
}